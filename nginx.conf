worker_processes 1;

env TARGET_SCHEME;
env TARGET_HOST;

error_log /var/log/nginx/error.log warn;

events {
  worker_connections 1024;
}

http {
  log_format postdata escape=json '$remote_addr - $remote_user [$time_local] '
    '"$request" $status $sent_http_content_type $bytes_sent '
    '"$http_referer" "$http_user_agent" "$request_body"';

  server {
    set_by_lua $my_server_name 'return os.getenv("NGINX_SERVERNAMR")';
    set_by_lua $target_scheme 'return os.getenv("TARGET_SCHEME")';
    set_by_lua $target_host 'return os.getenv("TARGET_HOST")';

    include mime.types;
    default_type application/octet-stream;
    listen 8080;
    server_name $my_server_name;
    sendfile on;
    resolver 8.8.8.8;

    location / {
      access_log /var/log/nginx/access.log postdata;
      # без этого заголовка не работают саб фильтры
      proxy_set_header Accept-Encoding "";
      proxy_set_header Host $target_host;
      proxy_set_header Referer $target_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      # https://stackoverflow.com/questions/19568452/modifying-a-location-header-with-nginx-proxy-pass
      # proxy_redirect http://$target_host/ /;
      # proxy_redirect https://$target_host/ /;
      proxy_cookie_domain $target_host $host;
      proxy_pass ${target_scheme}://${target_host};
      # подменяем ссылки в тексте
      # duplicate MIME type "text/html"
      # The same applies to sub_filter_types as mentioned in nginx.org/en/docs/http/…: Enables string replacement in responses with the specified MIME types in addition to “text/html”.
      sub_filter_types text/css application/javascript application/json;
      sub_filter $target_host $host;
      # если не отключить заменит лишь первое вхождение
      sub_filter_once off;
    }
    # location /test {
    #   content_by_lua_file test.lua;
    # }
  }
}
